{
        "openapi": "3.0.0",
        "info": {
            "title": "AASAAN PARTNER REST API",
            "version": "1.0.0",
            "description": "REST API endpoints are organized by resource type. You’ll need to use different endpoints depending on your app’s requirements."
        },
        "components": {
            "securitySchemes": {
                "apiKeyAuth": {
                    "type": "apiKey",
                    "in": "header",  
                    "name": "Authorization" 
                }
            },
            "schemas": {
                "Store": {
                    "properties": {
                        "id": {
                            "type": "string",
                            "description": "Unique identifier for the resource that was used to create this store",
                            "example": "store-id-1"
                        },
                        "storeName": {
                            "type": "string",
                            "description": "Name",
                            "example": "lunchbox"
                        },
                        "email": {
                            "type": "string",
                            "description": "Email associated with the store",
                            "example": "test@noreply.com"
                        },
                        "currency": {
                            "type": "string",
                            "description": "Base currency associated with this store",
                            "example": "USD"
                        },
                        "storeUrl": {
                            "type": "string",
                            "description": "The full store url that of the store that was created",
                            "example": "USD"
                        },
                        "metaData": {
                            "type": "object",
                            "description": "any additional metadata that was stored as a part of this store creation"
                        },
                        "address": {
                            "type": "object",
                            "description": "Address of the store",
                            "properties": {
                                "aptNo": {
                                    "type": "string",
                                    "description": "apt or door number of the store address",
                                    "example": "123A 345"
                                },
                                "line1": {
                                    "type": "string",
                                    "description": "First line of the address",
                                    "example": "Central Park East"
                                },
                                "line2": {
                                    "type": "string",
                                    "description": "Second line of the address",
                                    "example": "Central Park East"
                                },
                                "city": {
                                    "type": "string",
                                    "description": "Name of the city",
                                    "example": "New York"
                                },
                                "state": {
                                    "type": "string",
                                    "description": "Name of the state",
                                    "example": "New York"
                                },
                                "zipcode": {
                                    "type": "string",
                                    "description": "ZipCode associated with the address",
                                    "example": 10025
                                },
                                "country": {
                                    "type": "string",
                                    "description": "Name of country of the associated address",
                                    "example": "USA"
                                }
                            }
                        }
                    }
                },
                "StoreBody": {
                    "required": [
                        "storeName",
                        "currency",
                        "address",
                        "templateName"
                    ],
                    "properties": {
                        "storeName": {
                            "type": "string",
                            "description": "Name",
                            "example": "lunchbox"
                        },
                        "email": {
                            "type": "string",
                            "description": "Email associated with the store",
                            "example": "test@noreply.com"
                        },
                        "mobile": {
                            "type": "string",
                            "description": "Mobile number associated with the store",
                            "example": "323-232-2323"
                        },
                        "logo": {
                            "type": "string",
                            "description": "Logo which appears on the website",
                            "example": "https://images.aasaan.shop/stores/logo/logo_1684500490812.png"
                        },
                        "favicon": {
                            "type": "string",
                            "description": "Favicon which appears on the website",
                            "example": "https://images.aasaan.shop/stores/favicon/favicon_1684500490812.png"
                        },
                        "currency": {
                            "type": "string",
                            "description": "Base currency associated with this store",
                            "example": "USD"
                        },
                        "templateName": {
                            "type": "string",
                            "description": "Template that needs to be used in this store creation to setup home page and other assets",
                            "example": "Restaurant Template"
                        },
                        "metaData": {
                            "type": "object",
                            "description": "any additional metadata that was stored as a part of this store creation"
                        },
                        "workingHours": {
                            "type": "array",
                            "description": "Gives the working hours on a given day. If you are specifying this - you will have to provide data for all seven days.",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "timeZone": {
                                        "type": "string",
                                        "description": "timezone for the working hours",
                                        "example": "EDT"
                                    },
                                    "days": {
                                        "type": "array",
                                        "description": "information about times for a specific day",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "day": {
                                                    "type": "string",
                                                    "description": "day of the week",
                                                    "example": "Monday"
                                                },
                                                "holiday": {
                                                    "type": "string",
                                                    "description": "specify a reason if this particular day is a holiday",
                                                    "example": "Independence Day, Sunday, Monday"
                                                },
                                                "times": {
                                                    "type": "array",
                                                    "description": "various times during the day when the store is open on the specified time zone",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "startTime": {
                                                                "type": "string",
                                                                "description": "start time for this period",
                                                                "example": "10:00 AM"
                                                            },
                                                            "endTime": {
                                                                "type": "string",
                                                                "description": "end time for this period",
                                                                "example": "15:00 PM"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "address": {
                            "type": "object",
                            "description": "Address of the store",
                            "properties": {
                                "aptNo": {
                                    "type": "string",
                                    "description": "apt or door number of the store address",
                                    "example": "123A 345"
                                },
                                "line1": {
                                    "type": "string",
                                    "description": "First line of the address",
                                    "example": "Central Park East"
                                },
                                "line2": {
                                    "type": "string",
                                    "description": "Second line of the address",
                                    "example": "Central Park East"
                                },
                                "city": {
                                    "type": "string",
                                    "description": "Name of the city",
                                    "example": "New York"
                                },
                                "state": {
                                    "type": "string",
                                    "description": "Name of the state",
                                    "example": "New York"
                                },
                                "zipcode": {
                                    "type": "string",
                                    "description": "ZipCode associated with the address",
                                    "example": 10025
                                },
                                "country": {
                                    "type": "string",
                                    "description": "Name of country of the associated address",
                                    "example": "USA"
                                }
                            }
                        },
                        "seo": {
                            "type": "object",
                            "description": "Seo of the store",
                            "properties": {
                                "title": {
                                    "type": "string",
                                    "description": "seo title for the store",
                                    "example": "seo title"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "seo description for the store",
                                    "example": "seo description"
                                },
                                "image": {
                                    "type": "string",
                                    "description": "seo image for the store",
                                    "example": "https://images.lightbooks-dev.io/stores/automationtest7946886/seo/seo_1678560927290.jpeg"
                                }
                            }
                        }
                    }
                },
                "StoreUpdateBody": {
                    "properties": {
                        "email": {
                            "type": "string",
                            "description": "Email associated with the store",
                            "example": "test@noreply.com"
                        },
                        "mobile": {
                            "type": "string",
                            "description": "Mobile number associated with the store",
                            "example": "323-232-2323"
                        },
                        "logo": {
                            "type": "string",
                            "description": "Logo which appears on the website",
                            "example": "https://images.aasaan.shop/stores/logo/logo_1684500490812.png"
                        },
                        "favicon": {
                            "type": "string",
                            "description": "Favicon which appears on the website",
                            "example": "https://images.aasaan.shop/stores/favicon/favicon_1684500490812.png"
                        },
                        "metaData": {
                            "type": "object",
                            "description": "any additional metadata that was stored as a part of this store creation"
                        },
                        "workingHours": {
                            "type": "array",
                            "description": "Gives the working hours on a given day. If you are specifying this - you will have to provide data for all seven days.",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "timeZone": {
                                        "type": "string",
                                        "description": "timezone for the working hours",
                                        "example": "EDT"
                                    },
                                    "days": {
                                        "type": "array",
                                        "description": "information about times for a specific day",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "day": {
                                                    "type": "string",
                                                    "description": "day of the week",
                                                    "example": "Monday"
                                                },
                                                "holiday": {
                                                    "type": "string",
                                                    "description": "specify a reason if this particular day is a holiday",
                                                    "example": "Independence Day, Sunday, Monday"
                                                },
                                                "times": {
                                                    "type": "array",
                                                    "description": "various times during the day when the store is open on the specified time zone",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "startTime": {
                                                                "type": "string",
                                                                "description": "start time for this period",
                                                                "example": "10:00 AM"
                                                            },
                                                            "endTime": {
                                                                "type": "string",
                                                                "description": "end time for this period",
                                                                "example": "15:00 PM"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "address": {
                            "type": "object",
                            "description": "Address of the store",
                            "properties": {
                                "aptNo": {
                                    "type": "string",
                                    "description": "apt or door number of the store address",
                                    "example": "123A 345"
                                },
                                "line1": {
                                    "type": "string",
                                    "description": "First line of the address",
                                    "example": "Central Park East"
                                },
                                "line2": {
                                    "type": "string",
                                    "description": "Second line of the address",
                                    "example": "Central Park East"
                                },
                                "city": {
                                    "type": "string",
                                    "description": "Name of the city",
                                    "example": "New York"
                                },
                                "state": {
                                    "type": "string",
                                    "description": "Name of the state",
                                    "example": "New York"
                                },
                                "zipcode": {
                                    "type": "string",
                                    "description": "ZipCode associated with the address",
                                    "example": 10025
                                },
                                "country": {
                                    "type": "string",
                                    "description": "Name of country of the associated address",
                                    "example": "USA"
                                }
                            }
                        },
                        "seo": {
                            "type": "object",
                            "description": "Seo of the store",
                            "properties": {
                                "title": {
                                    "type": "string",
                                    "description": "seo title for the store",
                                    "example": "seo title"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "seo description for the store",
                                    "example": "seo description"
                                },
                                "image": {
                                    "type": "string",
                                    "description": "seo image for the store",
                                    "example": "https://images.lightbooks-dev.io/stores/automationtest7946886/seo/seo_1678560927290.jpeg"
                                }
                            }
                        }
                    }
                },
                "CustomDomain": {
                    "properties": {
                        "id": {
                            "type": "string",
                            "description": "Unique identifier for the resource",
                            "example": "623d3455ec3c4b3548eb4a322"
                        },
                        "name": {
                            "type": "string",
                            "description": "Name",
                            "example": "example.com"
                        },
                        "connected": {
                            "type": "boolean",
                            "description": "Connect the custom domain",
                            "example": "true"
                        },
                        "createdAt": {
                            "type": "string",
                            "description": "Created date",
                            "example": "2022-03-25T03:17:44.092Z"
                        },
                        "updatedAt": {
                            "type": "string",
                            "description": "Updated date",
                            "example": "2022-06-10T07:51:12.510Z"
                        }
                    }
                },
                "CustomDomainBody": {
                    "required": [
                        "name"
                    ],
                    "properties": {
                        "name": {
                            "type": "string",
                            "description": "Name",
                            "example": "example.com"
                        }
                    }
                },
                "Category": {
                    "properties": {
                        "id": {
                            "type": "string",
                            "description": "Unique identifier for the resource that was used to create this category",
                            "example": "623d3455ec3c4b3548eb4a322"
                        },
                        "name": {
                            "type": "string",
                            "description": "Name",
                            "example": "Shampoo"
                        },
                        "slug": {
                            "type": "string",
                            "description": "Slug",
                            "example": "shampoo"
                        },
                        "description": {
                            "type": "string",
                            "description": "Shampoos and conditioners",
                            "example": "Hair categories"
                        },
                        "hide": {
                            "type": "string",
                            "description": "Hide a category",
                            "example": false
                        },
                        "displayOrder": {
                            "type": "string",
                            "description": "Display order",
                            "example": 0
                        },
                        "parentCategoryId": {
                            "type": "string",
                            "description": "Parent category id",
                            "example": "6124bc492f3660f743776404"
                        },
                        "image": {
                            "type": "object",
                            "description": "Category image",
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "description": "Image identifier",
                                    "example": 0
                                },
                                "url": {
                                    "type": "string",
                                    "description": "Image URL",
                                    "example": "https://images.aasaan.app/123412421"
                                },
                                "type": {
                                    "type": "string",
                                    "description": "Mime Type",
                                    "example": "image/png"
                                }
                            }
                        },
                        "date_created": {
                            "type": "string",
                            "description": "Created date",
                            "example": "2022-03-25T03:17:44.092Z"
                        },
                        "date_modified": {
                            "type": "string",
                            "description": "Modified date",
                            "example": "2022-06-10T07:51:12.510Z"
                        }
                    }
                },
                "CategoryBody": {
                    "required": [
                        "name"
                    ],
                    "properties": {
                        "name": {
                            "type": "string",
                            "description": "Name",
                            "example": "Shampoo"
                        },
                        "slug": {
                            "type": "string",
                            "description": "Slug",
                            "example": "shampoo"
                        },
                        "description": {
                            "type": "string",
                            "description": "Shampoos and conditioners",
                            "example": "Hair categories"
                        },
                        "hide": {
                            "type": "string",
                            "description": "Hide a category",
                            "example": false
                        },
                        "displayOrder": {
                            "type": "string",
                            "description": "Display order",
                            "example": 0
                        },
                        "parentCategoryId": {
                            "type": "string",
                            "description": "Parent category id",
                            "example": "6124bc492f3660f743776404"
                        },
                        "image": {
                            "type": "object",
                            "description": "Category image",
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "description": "Image identifier",
                                    "example": 0
                                },
                                "url": {
                                    "type": "string",
                                    "description": "Image URL",
                                    "example": "https://images.aasaan.app/123412421"
                                },
                                "type": {
                                    "type": "string",
                                    "description": "Mime Type",
                                    "example": "image/png"
                                }
                            }
                        }
                    }
                },
                "CategoryBodyWithId": {
                    "required": [
                        "id",
                        "name"
                    ],
                    "properties": {
                        "id": {
                            "type": "string",
                            "description": "id",
                            "example": "ae7219"
                        },
                        "name": {
                            "type": "string",
                            "description": "Name",
                            "example": "Shampoo"
                        },
                        "slug": {
                            "type": "string",
                            "description": "Slug",
                            "example": "shampoo"
                        },
                        "description": {
                            "type": "string",
                            "description": "Shampoos and conditioners",
                            "example": "Hair categories"
                        },
                        "hide": {
                            "type": "string",
                            "description": "Hide a category",
                            "example": false
                        },
                        "displayOrder": {
                            "type": "string",
                            "description": "Display order",
                            "example": 0
                        },
                        "parentCategoryId": {
                            "type": "string",
                            "description": "Parent category id",
                            "example": "6124bc492f3660f743776404"
                        },
                        "image": {
                            "type": "object",
                            "description": "Category image",
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "description": "Image identifier",
                                    "example": 0
                                },
                                "url": {
                                    "type": "string",
                                    "description": "Image URL",
                                    "example": "https://images.aasaan.app/123412421"
                                },
                                "type": {
                                    "type": "string",
                                    "description": "Mime Type",
                                    "example": "image/png"
                                }
                            }
                        }
                    }
                },
                "Brand": {
                    "properties": {
                        "id": {
                            "type": "string",
                            "description": "Unique identifier for the resource that was used to create this brand",
                            "example": "external-brand-id-1"
                        },
                        "name": {
                            "type": "string",
                            "description": "Name",
                            "example": "Head & Shoulders"
                        },
                        "slug": {
                            "type": "string",
                            "description": "Slug",
                            "example": "head_shoulders"
                        },
                        "description": {
                            "type": "string",
                            "description": "Head & Shoulders brand",
                            "example": "Head & Shoulders"
                        },
                        "hide": {
                            "type": "string",
                            "description": "Hide a brand",
                            "example": false
                        },
                        "displayOrder": {
                            "type": "string",
                            "description": "Display order",
                            "example": 0
                        },
                        "active": {
                            "type": "boolean",
                            "description": "Activate the brand",
                            "example": "true"
                        },
                        "image": {
                            "type": "object",
                            "description": "Brand image",
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "description": "Image identifier",
                                    "example": 0
                                },
                                "url": {
                                    "type": "string",
                                    "description": "Image URL",
                                    "example": "https://images.aasaan.app/123412421"
                                },
                                "type": {
                                    "type": "string",
                                    "description": "Mime Type",
                                    "example": "image/png"
                                }
                            }
                        },
                        "date_created": {
                            "type": "string",
                            "description": "Created date",
                            "example": "2022-03-25T03:17:44.092Z"
                        },
                        "date_modified": {
                            "type": "string",
                            "description": "Modified date",
                            "example": "2022-06-10T07:51:12.510Z"
                        }
                    }
                },
                "BrandBody": {
                    "required": [
                        "name"
                    ],
                    "properties": {
                        "name": {
                            "type": "string",
                            "description": "Name",
                            "example": "Head & Shoulders"
                        },
                        "slug": {
                            "type": "string",
                            "description": "Slug",
                            "example": "head_shoulders"
                        },
                        "description": {
                            "type": "string",
                            "description": "Head & Shoulders brand",
                            "example": "Head & Shoulders"
                        },
                        "hide": {
                            "type": "string",
                            "description": "Hide a brand",
                            "example": false
                        },
                        "displayOrder": {
                            "type": "string",
                            "description": "Display order",
                            "example": 0
                        },
                        "active": {
                            "type": "boolean",
                            "description": "Activate the brand",
                            "example": "true"
                        },
                        "image": {
                            "type": "object",
                            "description": "Brand image",
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "description": "Image identifier",
                                    "example": 0
                                },
                                "url": {
                                    "type": "string",
                                    "description": "Image URL",
                                    "example": "https://images.aasaan.app/123412421"
                                },
                                "type": {
                                    "type": "string",
                                    "description": "Mime Type",
                                    "example": "image/png"
                                }
                            }
                        }
                    }
                },
                "BrandUpdateBody": {
                    "properties": {
                        "name": {
                            "type": "string",
                            "description": "Name",
                            "example": "Head & Shoulders"
                        },
                        "slug": {
                            "type": "string",
                            "description": "Slug",
                            "example": "head_shoulders"
                        },
                        "description": {
                            "type": "string",
                            "description": "Head & Shoulders brand",
                            "example": "Head & Shoulders"
                        },
                        "hide": {
                            "type": "string",
                            "description": "Hide a brand",
                            "example": false
                        },
                        "displayOrder": {
                            "type": "string",
                            "description": "Display order",
                            "example": 0
                        },
                        "active": {
                            "type": "boolean",
                            "description": "Activate the brand",
                            "example": "true"
                        },
                        "image": {
                            "type": "object",
                            "description": "Brand image",
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "description": "Image identifier",
                                    "example": 0
                                },
                                "url": {
                                    "type": "string",
                                    "description": "Image URL",
                                    "example": "https://images.aasaan.app/123412421"
                                },
                                "type": {
                                    "type": "string",
                                    "description": "Mime Type",
                                    "example": "image/png"
                                }
                            }
                        }
                    }
                },
                "BrandBodyWithId": {
                    "required": [
                        "id",
                        "name"
                    ],
                    "properties": {
                        "id": {
                            "type": "string",
                            "description": "id",
                            "example": "ae7219"
                        },
                        "name": {
                            "type": "string",
                            "description": "Name",
                            "example": "Head & Shoulders"
                        },
                        "slug": {
                            "type": "string",
                            "description": "Slug",
                            "example": "head_shoulders"
                        },
                        "description": {
                            "type": "string",
                            "description": "Head & Shoulders brand",
                            "example": "Head & Shoulders"
                        },
                        "hide": {
                            "type": "string",
                            "description": "Hide a brand",
                            "example": false
                        },
                        "displayOrder": {
                            "type": "string",
                            "description": "Display order",
                            "example": 0
                        },
                        "active": {
                            "type": "boolean",
                            "description": "Activate the brand",
                            "example": "true"
                        },
                        "image": {
                            "type": "object",
                            "description": "Brand image",
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "description": "Image identifier",
                                    "example": 0
                                },
                                "url": {
                                    "type": "string",
                                    "description": "Image URL",
                                    "example": "https://images.aasaan.app/123412421"
                                },
                                "type": {
                                    "type": "string",
                                    "description": "Mime Type",
                                    "example": "image/png"
                                }
                            }
                        }
                    }
                },
                "Tag": {
                    "properties": {
                        "id": {
                            "type": "string",
                            "description": "Unique identifier for the resource that was used to create this tag",
                            "example": "vegan-tag-id-1"
                        },
                        "name": {
                            "type": "string",
                            "description": "Name Used for this tag",
                            "example": "vegan"
                        },
                        "imageUrl": {
                            "type": "string",
                            "description": "Name Used for this tag",
                            "example": "vegan"
                        }
                    }
                },
                "TagBody": {
                    "required": [
                        "name"
                    ],
                    "properties": {
                        "name": {
                            "type": "string",
                            "description": "Name to be used for this tag",
                            "example": "vegan"
                        },
                        "imageUrl": {
                            "type": "string",
                            "description": "Image that represents this tag",
                            "example": "https://images.aasaan.shop/stores/logo/logo_1684500490812.png"
                        }
                    }
                },
                "TagUpdateBody": {
                    "properties": {
                        "name": {
                            "type": "string",
                            "description": "Name to be used for this tag",
                            "example": "vegan"
                        },
                        "imageUrl": {
                            "type": "string",
                            "description": "Image that represents this tag",
                            "example": "https://images.aasaan.shop/stores/logo/logo_1684500490812.png"
                        }
                    }
                },
                "TagBodyWithId": {
                    "properties": {
                        "id": {
                            "type": "string",
                            "description": "ID of the Tag that needs to be put",
                            "example": "vegan-id-1"
                        },
                        "name": {
                            "type": "string",
                            "description": "Name to be used for this tag",
                            "example": "vegan"
                        },
                        "imageUrl": {
                            "type": "string",
                            "description": "Image that represents this tag",
                            "example": "https://images.aasaan.shop/stores/logo/logo_1684500490812.png"
                        }
                    }
                },
                "Product": {
                    "properties": {
                        "id": {
                            "type": "string",
                            "description": "Unique identifier for the resource that was used to create this product",
                            "example": "623d3455ec3c4b3548eb4a343"
                        },
                        "name": {
                            "type": "string",
                            "description": "Name",
                            "example": "Head & Shoulders Anti Hairfall Anti Dandruff Shampoo"
                        },
                        "slug": {
                            "type": "string",
                            "description": "Slug",
                            "example": "head_shoulders_anti_hairfall_anti_dandruff_shampoo_650_ml_22"
                        },
                        "salesPrice": {
                            "type": "string",
                            "description": "Sales price",
                            "example": 543
                        },
                        "regularPrice": {
                            "type": "string",
                            "description": "Actual price",
                            "example": 543
                        },
                        "quantity": {
                            "type": "integer",
                            "description": "Product quantity",
                            "example": 1
                        },
                        "description": {
                            "type": "string",
                            "description": "Product description",
                            "example": "Now, ensure the good health of your hair with Head & Shoulders Anti Hairfall Anti Dandruff Shampoo that strengthens hair from its roots and cures dandruff. Be it dry, frizzy, or damaged, this shampoo can bring back the younger days of your hair within just a few days. The shampoo is richly indulgent and improves the experience of washing your hair. It makes your hair dandruff-free up to 100%. Do not fret over chemicals as the product is gentle in use and can be used every day."
                        },
                        "shortDescription": {
                            "type": "string",
                            "description": "Product short description",
                            "example": "Anti Dandruff Shampoo that strengthens hair from its roots and cures dandruff"
                        },
                        "hide": {
                            "type": "boolean",
                            "description": "Hide this product",
                            "example": false
                        },
                        "active": {
                            "type": "boolean",
                            "description": "Active indicator",
                            "example": true
                        },
                        "outOfStock": {
                            "type": "boolean",
                            "description": "Out of stock product",
                            "example": false
                        },
                        "displayOrder": {
                            "type": "integer",
                            "description": "Display Order within the category",
                            "example": 1
                        },
                        "width": {
                            "type": "integer",
                            "description": "Width(cm)",
                            "example": 100
                        },
                        "height": {
                            "type": "integer",
                            "description": "Height(cm)",
                            "example": 200
                        },
                        "depth": {
                            "type": "integer",
                            "description": "Depth(cm)",
                            "example": 20
                        },
                        "weight": {
                            "type": "integer",
                            "description": "Weight(kg)",
                            "example": 500
                        },
                        "isShippingEnabled": {
                            "type": "boolean",
                            "description": "Enable to enter shipping details",
                            "example": true
                        },
                        "isVariantEnabled": {
                            "type": "boolean",
                            "description": "Enable to enter product variants"
                        },
                        "variantAttributeValues": {
                            "type": "array",
                            "description": "All Possible Variant Attribute Values that this parent product can have",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "description": "Name of the variant attribute",
                                        "example": "color"
                                    },
                                    "value": {
                                        "type": "array",
                                        "description": "List of all possible values that this attribute can have as variants",
                                        "items": {
                                            "type": "string",
                                            "example": "blue, yellow, green"
                                        }
                                    }
                                }
                            }
                        },
                        "seo": {
                            "type": "object",
                            "description": "SEO metadata for this product",
                            "properties": {
                                "title": {
                                    "type": "string",
                                    "description": "SEO Title",
                                    "example": "Head and Shoulders"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "SEO Description",
                                    "example": "Head & Shoulders Anti Hairfall Anti Dandruff Shampoo that strengthens hair"
                                },
                                "image": {
                                    "type": "object",
                                    "description": "SEO Image",
                                    "properties": {
                                        "url": {
                                            "type": "string",
                                            "description": "Image URL",
                                            "example": "https://images.aasaan.app/123412421"
                                        },
                                        "type": {
                                            "type": "string",
                                            "description": "Mime Type",
                                            "example": "image/png"
                                        }
                                    }
                                }
                            }
                        },
                        "categories": {
                            "type": "array",
                            "description": "Associated Categories",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "type": "string",
                                        "description": "id",
                                        "example": "1231231"
                                    },
                                    "name": {
                                        "type": "string",
                                        "description": "name",
                                        "example": "Shampoos and Soaps"
                                    }
                                }
                            }
                        },
                        "images": {
                            "type": "array",
                            "description": "Product images",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "type": "string",
                                        "description": "Image identifier",
                                        "example": 0
                                    },
                                    "url": {
                                        "type": "string",
                                        "description": "Image URL",
                                        "example": "https://images.aasaan.app/123412421"
                                    },
                                    "type": {
                                        "type": "string",
                                        "description": "Mime Type",
                                        "example": "image/png"
                                    }
                                }
                            }
                        },
                        "brand": {
                            "type": "object",
                            "description": "Brand",
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "description": "id",
                                    "example": "636f2e876e9de14bfe1b02fa"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "name",
                                    "example": "P&G"
                                }
                            }
                        },
                        "metaData": {
                            "type": "object",
                            "description": "Any additional meta data that needs to be stored as a part of this entity"
                        },
                        "variants": {
                            "type": "array",
                            "description": "Images",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "type": "string",
                                        "description": "Unique identifier for a variant",
                                        "example": "567152378158871683"
                                    },
                                    "name": {
                                        "type": "string",
                                        "description": "Variant name",
                                        "example": "Head & Shoulders Anti Hairfall Anti Dandruff Shampoo 600ml"
                                    },
                                    "salesPrice": {
                                        "type": "string",
                                        "description": "Sales price",
                                        "example": 800
                                    },
                                    "regularPrice": {
                                        "type": "string",
                                        "description": "Actual price",
                                        "example": 800
                                    },
                                    "quantity": {
                                        "type": "integer",
                                        "description": "Variant quantity",
                                        "example": 10
                                    },
                                    "description": {
                                        "type": "string",
                                        "description": "Variant description",
                                        "example": ""
                                    },
                                    "shortDescription": {
                                        "type": "string",
                                        "description": "Variant short description",
                                        "example": ""
                                    },
                                    "hide": {
                                        "type": "boolean",
                                        "description": "Hide this variant",
                                        "example": false
                                    },
                                    "active": {
                                        "type": "boolean",
                                        "description": "Active indicator",
                                        "example": true
                                    },
                                    "outOfStock": {
                                        "type": "boolean",
                                        "description": "Out of stock",
                                        "example": false
                                    },
                                    "width": {
                                        "type": "integer",
                                        "description": "Width(cm)",
                                        "example": 10
                                    },
                                    "height": {
                                        "type": "integer",
                                        "description": "Height(cm)",
                                        "example": 10
                                    },
                                    "depth": {
                                        "type": "integer",
                                        "description": "Depth(cm)",
                                        "example": 10
                                    },
                                    "weight": {
                                        "type": "integer",
                                        "description": "Weight(kg)",
                                        "example": 10
                                    },
                                    "isShippingEnabled": {
                                        "type": "boolean",
                                        "description": "Enable to enter shipping details",
                                        "example": true
                                    },
                                    "images": {
                                        "type": "array",
                                        "description": "Variant images",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "string",
                                                    "description": "Image identifier",
                                                    "example": 0
                                                },
                                                "url": {
                                                    "type": "string",
                                                    "description": "Image URL",
                                                    "example": "https://images.aasaan.app/123412421"
                                                },
                                                "type": {
                                                    "type": "string",
                                                    "description": "Mime Type",
                                                    "example": "image/png"
                                                }
                                            }
                                        }
                                    },
                                    "date_created": {
                                        "type": "string",
                                        "description": "Created date",
                                        "example": "2022-03-25T03:17:44.092Z"
                                    },
                                    "date_modified": {
                                        "type": "string",
                                        "description": "Modified date",
                                        "example": "2022-06-10T07:51:12.510Z"
                                    }
                                }
                            }
                        },
                        "date_created": {
                            "type": "string",
                            "description": "Created date",
                            "example": "2022-03-25T03:17:44.092Z"
                        },
                        "date_modified": {
                            "type": "string",
                            "description": "Modified date",
                            "example": "2022-06-10T07:51:12.510Z"
                        }
                    }
                },
                "ProductBody": {
                    "required": [
                        "name",
                        "salesPrice",
                        "regularPrice",
                        "quantity",
                        "weight",
                        "categories"
                    ],
                    "properties": {
                        "name": {
                            "type": "string",
                            "description": "Name",
                            "example": "Head & Shoulders Anti Hairfall Anti Dandruff Shampoo"
                        },
                        "salesPrice": {
                            "type": "string",
                            "description": "Sales price",
                            "example": 543
                        },
                        "regularPrice": {
                            "type": "string",
                            "description": "Actual price",
                            "example": 543
                        },
                        "quantity": {
                            "type": "integer",
                            "description": "Product quantity",
                            "example": 100
                        },
                        "weight": {
                            "type": "integer",
                            "description": "Weight(kg)",
                            "example": 2
                        },
                        "categories": {
                            "type": "array",
                            "description": "Associated Categories",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "type": "string",
                                        "description": "id",
                                        "example": "636f2e876e9de14bfe1b02f1"
                                    }
                                }
                            }
                        },
                        "description": {
                            "type": "string",
                            "description": "Product description",
                            "example": "Now, ensure the good health of your hair with Head & Shoulders Anti Hairfall Anti Dandruff Shampoo that strengthens hair from its roots and cures dandruff. Be it dry, frizzy, or damaged, this shampoo can bring back the younger days of your hair within just a few days. The shampoo is richly indulgent and improves the experience of washing your hair. It makes your hair dandruff-free up to 100%. Do not fret over chemicals as the product is gentle in use and can be used every day."
                        },
                        "shortDescription": {
                            "type": "string",
                            "description": "Product short description",
                            "example": "Anti Dandruff Shampoo that strengthens hair from its roots and cures dandruff"
                        },
                        "hide": {
                            "type": "boolean",
                            "description": "Hide this product",
                            "example": false
                        },
                        "active": {
                            "type": "boolean",
                            "description": "Active indicator",
                            "example": true
                        },
                        "outOfStock": {
                            "type": "boolean",
                            "description": "Out of stock product",
                            "example": false
                        },
                        "displayOrder": {
                            "type": "integer",
                            "description": "Display Order within the category",
                            "example": 1
                        },
                        "width": {
                            "type": "integer",
                            "description": "Width(cm)",
                            "example": 100
                        },
                        "height": {
                            "type": "integer",
                            "description": "Height(cm)",
                            "example": 200
                        },
                        "depth": {
                            "type": "integer",
                            "description": "Depth(cm)",
                            "example": 20
                        },
                        "isShippingEnabled": {
                            "type": "boolean",
                            "description": "Enable to enter shipping details",
                            "example": true
                        },
                        "seo": {
                            "type": "object",
                            "description": "SEO metadata for this product",
                            "properties": {
                                "title": {
                                    "type": "string",
                                    "description": "SEO Title",
                                    "example": "Head and Shoulders"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "SEO Description",
                                    "example": "Head & Shoulders Anti Hairfall Anti Dandruff Shampoo that strengthens hair"
                                },
                                "image": {
                                    "type": "object",
                                    "description": "SEO Image",
                                    "properties": {
                                        "url": {
                                            "type": "string",
                                            "description": "Image URL",
                                            "example": "https://images.aasaan.app/123412421"
                                        },
                                        "type": {
                                            "type": "string",
                                            "description": "Mime Type",
                                            "example": "image/png"
                                        }
                                    }
                                }
                            }
                        },
                        "images": {
                            "type": "array",
                            "description": "Product images",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "type": "string",
                                        "description": "Image identifier",
                                        "example": 0
                                    },
                                    "url": {
                                        "type": "string",
                                        "description": "Image URL",
                                        "example": "https://images.aasaan.app/123412421"
                                    },
                                    "type": {
                                        "type": "string",
                                        "description": "Mime Type",
                                        "example": "https://images.aasaan.app/123412421"
                                    }
                                }
                            }
                        },
                        "brand": {
                            "type": "object",
                            "description": "Brand",
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "description": "id",
                                    "example": "636f2e876e9de14bfe1b02f2"
                                }
                            }
                        },
                        "metaData": {
                            "type": "object",
                            "description": "Any additional meta data that needs to be stored as a part of this entity"
                        },
                        "variantAttributeValues": {
                            "type": "array",
                            "description": "All Possible Variant Attribute Values that this parent product can have",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "description": "Name of the variant attribute",
                                        "example": "color"
                                    },
                                    "value": {
                                        "type": "array",
                                        "description": "List of all possible values that this attribute can have as variants",
                                        "items": {
                                            "type": "string",
                                            "example": "blue, yellow, green"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "ProductBodyWithId": {
                    "required": [
                        "id",
                        "name",
                        "salesPrice",
                        "regularPrice",
                        "quantity",
                        "weight",
                        "categories"
                    ],
                    "properties": {
                        "id": {
                            "type": "string",
                            "description": "id",
                            "example": "ae7219"
                        },
                        "name": {
                            "type": "string",
                            "description": "Name",
                            "example": "Head & Shoulders Anti Hairfall Anti Dandruff Shampoo"
                        },
                        "salesPrice": {
                            "type": "string",
                            "description": "Sales price",
                            "example": 543
                        },
                        "regularPrice": {
                            "type": "string",
                            "description": "Actual price",
                            "example": 543
                        },
                        "quantity": {
                            "type": "integer",
                            "description": "Product quantity",
                            "example": 100
                        },
                        "weight": {
                            "type": "integer",
                            "description": "Weight(kg)",
                            "example": 2
                        },
                        "categories": {
                            "type": "array",
                            "description": "Associated Categories",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "type": "string",
                                        "description": "id",
                                        "example": "636f2e876e9de14bfe1b02f1"
                                    }
                                }
                            }
                        },
                        "description": {
                            "type": "string",
                            "description": "Product description",
                            "example": "Now, ensure the good health of your hair with Head & Shoulders Anti Hairfall Anti Dandruff Shampoo that strengthens hair from its roots and cures dandruff. Be it dry, frizzy, or damaged, this shampoo can bring back the younger days of your hair within just a few days. The shampoo is richly indulgent and improves the experience of washing your hair. It makes your hair dandruff-free up to 100%. Do not fret over chemicals as the product is gentle in use and can be used every day."
                        },
                        "shortDescription": {
                            "type": "string",
                            "description": "Product short description",
                            "example": "Anti Dandruff Shampoo that strengthens hair from its roots and cures dandruff"
                        },
                        "hide": {
                            "type": "boolean",
                            "description": "Hide this product",
                            "example": false
                        },
                        "active": {
                            "type": "boolean",
                            "description": "Active indicator",
                            "example": true
                        },
                        "outOfStock": {
                            "type": "boolean",
                            "description": "Out of stock product",
                            "example": false
                        },
                        "displayOrder": {
                            "type": "integer",
                            "description": "Display Order within the category",
                            "example": 1
                        },
                        "width": {
                            "type": "integer",
                            "description": "Width(cm)",
                            "example": 100
                        },
                        "height": {
                            "type": "integer",
                            "description": "Height(cm)",
                            "example": 200
                        },
                        "depth": {
                            "type": "integer",
                            "description": "Depth(cm)",
                            "example": 20
                        },
                        "isShippingEnabled": {
                            "type": "boolean",
                            "description": "Enable to enter shipping details",
                            "example": true
                        },
                        "seo": {
                            "type": "object",
                            "description": "SEO metadata for this product",
                            "properties": {
                                "title": {
                                    "type": "string",
                                    "description": "SEO Title",
                                    "example": "Head and Shoulders"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "SEO Description",
                                    "example": "Head & Shoulders Anti Hairfall Anti Dandruff Shampoo that strengthens hair"
                                },
                                "image": {
                                    "type": "object",
                                    "description": "SEO Image",
                                    "properties": {
                                        "url": {
                                            "type": "string",
                                            "description": "Image URL",
                                            "example": "https://images.aasaan.app/123412421"
                                        },
                                        "type": {
                                            "type": "string",
                                            "description": "Mime Type",
                                            "example": "image/png"
                                        }
                                    }
                                }
                            }
                        },
                        "images": {
                            "type": "array",
                            "description": "Product images",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "type": "string",
                                        "description": "Image identifier",
                                        "example": 0
                                    },
                                    "url": {
                                        "type": "string",
                                        "description": "Image URL",
                                        "example": "https://images.aasaan.app/123412421"
                                    },
                                    "type": {
                                        "type": "string",
                                        "description": "Mime Type",
                                        "example": "https://images.aasaan.app/123412421"
                                    }
                                }
                            }
                        },
                        "brand": {
                            "type": "object",
                            "description": "Brand",
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "description": "id",
                                    "example": "636f2e876e9de14bfe1b02f2"
                                }
                            }
                        },
                        "metaData": {
                            "type": "object",
                            "description": "Any additional meta data that needs to be stored as a part of this entity"
                        },
                        "variantAttributeValues": {
                            "type": "array",
                            "description": "All Possible Variant Attribute Values that this parent product can have",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "description": "Name of the variant attribute",
                                        "example": "color"
                                    },
                                    "value": {
                                        "type": "array",
                                        "description": "List of all possible values that this attribute can have as variants",
                                        "items": {
                                            "type": "string",
                                            "example": "blue, yellow, green"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "ProductUpdateBody": {
                    "properties": {
                        "name": {
                            "type": "string",
                            "description": "Name",
                            "example": "Head & Shoulders Anti Hairfall Anti Dandruff Shampoo"
                        },
                        "salesPrice": {
                            "type": "string",
                            "description": "Sales price",
                            "example": 543
                        },
                        "regularPrice": {
                            "type": "string",
                            "description": "Actual price",
                            "example": 543
                        },
                        "quantity": {
                            "type": "integer",
                            "description": "Product quantity",
                            "example": 100
                        },
                        "weight": {
                            "type": "integer",
                            "description": "Weight(kg)",
                            "example": 2
                        },
                        "categories": {
                            "type": "array",
                            "description": "Associated Categories",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "type": "string",
                                        "description": "id",
                                        "example": "636f2e876e9de14bfe1b02f1"
                                    }
                                }
                            }
                        },
                        "description": {
                            "type": "string",
                            "description": "Product description",
                            "example": "Now, ensure the good health of your hair with Head & Shoulders Anti Hairfall Anti Dandruff Shampoo that strengthens hair from its roots and cures dandruff. Be it dry, frizzy, or damaged, this shampoo can bring back the younger days of your hair within just a few days. The shampoo is richly indulgent and improves the experience of washing your hair. It makes your hair dandruff-free up to 100%. Do not fret over chemicals as the product is gentle in use and can be used every day."
                        },
                        "shortDescription": {
                            "type": "string",
                            "description": "Product short description",
                            "example": "Anti Dandruff Shampoo that strengthens hair from its roots and cures dandruff"
                        },
                        "hide": {
                            "type": "boolean",
                            "description": "Hide this product",
                            "example": false
                        },
                        "active": {
                            "type": "boolean",
                            "description": "Active indicator",
                            "example": true
                        },
                        "outOfStock": {
                            "type": "boolean",
                            "description": "Out of stock product",
                            "example": false
                        },
                        "displayOrder": {
                            "type": "integer",
                            "description": "Display Order within the category",
                            "example": 1
                        },
                        "width": {
                            "type": "integer",
                            "description": "Width(cm)",
                            "example": 100
                        },
                        "height": {
                            "type": "integer",
                            "description": "Height(cm)",
                            "example": 200
                        },
                        "depth": {
                            "type": "integer",
                            "description": "Depth(cm)",
                            "example": 20
                        },
                        "isShippingEnabled": {
                            "type": "boolean",
                            "description": "Enable to enter shipping details",
                            "example": true
                        },
                        "seo": {
                            "type": "object",
                            "description": "SEO metadata for this product",
                            "properties": {
                                "title": {
                                    "type": "string",
                                    "description": "SEO Title",
                                    "example": "Head and Shoulders"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "SEO Description",
                                    "example": "Head & Shoulders Anti Hairfall Anti Dandruff Shampoo that strengthens hair"
                                },
                                "image": {
                                    "type": "object",
                                    "description": "SEO Image",
                                    "properties": {
                                        "url": {
                                            "type": "string",
                                            "description": "Image URL",
                                            "example": "https://images.aasaan.app/123412421"
                                        },
                                        "type": {
                                            "type": "string",
                                            "description": "Mime Type",
                                            "example": "image/png"
                                        }
                                    }
                                }
                            }
                        },
                        "images": {
                            "type": "array",
                            "description": "Product images",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "type": "string",
                                        "description": "Image identifier",
                                        "example": 0
                                    },
                                    "url": {
                                        "type": "string",
                                        "description": "Image URL",
                                        "example": "https://images.aasaan.app/123412421"
                                    },
                                    "type": {
                                        "type": "string",
                                        "description": "Mime Type",
                                        "example": "https://images.aasaan.app/123412421"
                                    }
                                }
                            }
                        },
                        "brand": {
                            "type": "object",
                            "description": "Brand",
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "description": "id",
                                    "example": "636f2e876e9de14bfe1b02f2"
                                }
                            }
                        },
                        "metaData": {
                            "type": "object",
                            "description": "Any additional meta data that needs to be stored as a part of this entity"
                        },
                        "variantAttributeValues": {
                            "type": "array",
                            "description": "All Possible Variant Attribute Values that this parent product can have",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "description": "Name of the variant attribute",
                                        "example": "color"
                                    },
                                    "value": {
                                        "type": "array",
                                        "description": "List of all possible values that this attribute can have as variants",
                                        "items": {
                                            "type": "string",
                                            "example": "blue, yellow, green"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "Variant": {
                    "properties": {
                        "id": {
                            "type": "string",
                            "description": "Unique identifier for the resource",
                            "example": "623d3455ec3c4b3548eb4a343"
                        },
                        "names": {
                            "type": "array",
                            "description": "Name",
                            "example": "XL, Brown"
                        },
                        "slug": {
                            "type": "string",
                            "description": "Slug",
                            "example": "head_shoulders_anti_hairfall_anti_dandruff_shampoo_650_ml_22"
                        },
                        "salesPrice": {
                            "type": "string",
                            "description": "Sales price",
                            "example": 543
                        },
                        "regularPrice": {
                            "type": "string",
                            "description": "Actual price",
                            "example": 543
                        },
                        "quantity": {
                            "type": "integer",
                            "description": "Product quantity",
                            "example": 1
                        },
                        "description": {
                            "type": "string",
                            "description": "Product description",
                            "example": "Now, ensure the good health of your hair with Head & Shoulders Anti Hairfall Anti Dandruff Shampoo that strengthens hair from its roots and cures dandruff. Be it dry, frizzy, or damaged, this shampoo can bring back the younger days of your hair within just a few days. The shampoo is richly indulgent and improves the experience of washing your hair. It makes your hair dandruff-free up to 100%. Do not fret over chemicals as the product is gentle in use and can be used every day."
                        },
                        "shortDescription": {
                            "type": "string",
                            "description": "Product short description",
                            "example": "Anti Dandruff Shampoo that strengthens hair from its roots and cures dandruff"
                        },
                        "hide": {
                            "type": "boolean",
                            "description": "Hide this product",
                            "example": false
                        },
                        "active": {
                            "type": "boolean",
                            "description": "Active indicator",
                            "example": true
                        },
                        "outOfStock": {
                            "type": "boolean",
                            "description": "Out of stock product",
                            "example": false
                        },
                        "width": {
                            "type": "integer",
                            "description": "Width(cm)",
                            "example": 100
                        },
                        "height": {
                            "type": "integer",
                            "description": "Height(cm)",
                            "example": 200
                        },
                        "depth": {
                            "type": "integer",
                            "description": "Depth(cm)",
                            "example": 20
                        },
                        "weight": {
                            "type": "integer",
                            "description": "Weight(kg)",
                            "example": 500
                        },
                        "isShippingEnabled": {
                            "type": "boolean",
                            "description": "Enable to enter shipping details",
                            "example": true
                        },
                        "seo": {
                            "type": "object",
                            "description": "SEO metadata for this product",
                            "properties": {
                                "title": {
                                    "type": "string",
                                    "description": "SEO Title",
                                    "example": "Head and Shoulders"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "SEO Description",
                                    "example": "Head & Shoulders Anti Hairfall Anti Dandruff Shampoo that strengthens hair"
                                },
                                "image": {
                                    "type": "object",
                                    "description": "SEO Image",
                                    "properties": {
                                        "url": {
                                            "type": "string",
                                            "description": "Image URL",
                                            "example": "https://images.aasaan.app/123412421"
                                        },
                                        "type": {
                                            "type": "string",
                                            "description": "Mime Type",
                                            "example": "image/png"
                                        }
                                    }
                                }
                            }
                        },
                        "images": {
                            "type": "array",
                            "description": "Product images",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "type": "string",
                                        "description": "Image identifier",
                                        "example": 0
                                    },
                                    "url": {
                                        "type": "string",
                                        "description": "Image URL",
                                        "example": "https://images.aasaan.app/123412421"
                                    },
                                    "type": {
                                        "type": "string",
                                        "description": "Mime Type",
                                        "example": "image/png"
                                    }
                                }
                            }
                        },
                        "date_created": {
                            "type": "string",
                            "description": "Created date",
                            "example": "2022-03-25T03:17:44.092Z"
                        },
                        "date_modified": {
                            "type": "string",
                            "description": "Modified date",
                            "example": "2022-06-10T07:51:12.510Z"
                        }
                    }
                },
                "VariantBody": {
                    "required": [
                        "salesPrice",
                        "regularPrice",
                        "quantity",
                        "weight",
                        "variantAttributeValues"
                    ],
                    "properties": {
                        "salesPrice": {
                            "type": "string",
                            "description": "Sales price",
                            "example": 543
                        },
                        "regularPrice": {
                            "type": "string",
                            "description": "Actual price",
                            "example": 543
                        },
                        "quantity": {
                            "type": "integer",
                            "description": "Product quantity",
                            "example": 1
                        },
                        "variantAttributeValues": {
                            "type": "array",
                            "description": "attributes and corresponding options",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "description": "attribute name",
                                        "example": "color"
                                    },
                                    "value": {
                                        "type": "string",
                                        "description": "attribute option value",
                                        "example": "brown"
                                    }
                                }
                            }
                        },
                        "description": {
                            "type": "string",
                            "description": "Product description",
                            "example": "Now, ensure the good health of your hair with Head & Shoulders Anti Hairfall Anti Dandruff Shampoo that strengthens hair from its roots and cures dandruff. Be it dry, frizzy, or damaged, this shampoo can bring back the younger days of your hair within just a few days. The shampoo is richly indulgent and improves the experience of washing your hair. It makes your hair dandruff-free up to 100%. Do not fret over chemicals as the product is gentle in use and can be used every day."
                        },
                        "shortDescription": {
                            "type": "string",
                            "description": "Product short description",
                            "example": "Anti Dandruff Shampoo that strengthens hair from its roots and cures dandruff"
                        },
                        "active": {
                            "type": "boolean",
                            "description": "Active indicator",
                            "example": true
                        },
                        "outOfStock": {
                            "type": "boolean",
                            "description": "Out of stock product",
                            "example": false
                        },
                        "width": {
                            "type": "integer",
                            "description": "Width(cm)",
                            "example": 100
                        },
                        "height": {
                            "type": "integer",
                            "description": "Height(cm)",
                            "example": 200
                        },
                        "depth": {
                            "type": "integer",
                            "description": "Depth(cm)",
                            "example": 20
                        },
                        "weight": {
                            "type": "integer",
                            "description": "Weight(kg)",
                            "example": 500
                        },
                        "isShippingEnabled": {
                            "type": "boolean",
                            "description": "Enable to enter shipping details",
                            "example": true
                        },
                        "seo": {
                            "type": "object",
                            "description": "SEO metadata for this product",
                            "properties": {
                                "title": {
                                    "type": "string",
                                    "description": "SEO Title",
                                    "example": "Head and Shoulders"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "SEO Description",
                                    "example": "Head & Shoulders Anti Hairfall Anti Dandruff Shampoo that strengthens hair"
                                },
                                "image": {
                                    "type": "object",
                                    "description": "SEO Image",
                                    "properties": {
                                        "url": {
                                            "type": "string",
                                            "description": "Image URL",
                                            "example": "https://images.aasaan.app/123412421"
                                        },
                                        "type": {
                                            "type": "string",
                                            "description": "Mime Type",
                                            "example": "image/png"
                                        }
                                    }
                                }
                            }
                        },
                        "images": {
                            "type": "array",
                            "description": "Product images",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "type": "string",
                                        "description": "Image identifier",
                                        "example": 0
                                    },
                                    "url": {
                                        "type": "string",
                                        "description": "Image URL",
                                        "example": "https://images.aasaan.app/123412421"
                                    },
                                    "type": {
                                        "type": "string",
                                        "description": "Mime Type",
                                        "example": "https://images.aasaan.app/123412421"
                                    }
                                }
                            }
                        }
                    }
                },
                "Storefront": {
                    "properties": {
                        "pages": {
                            "type": "array",
                            "description": "Template Pages",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "pageName": {
                                        "type": "string",
                                        "description": "Page identifier",
                                        "example": "Home"
                                    },
                                    "pageUrl": {
                                        "type": "string",
                                        "description": "Page URL",
                                        "example": "/"
                                    },
                                    "widgets": {
                                        "type": "array",
                                        "description": "Widgets in the page",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "description": "Widget Type",
                                                    "example": "basic-slider"
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "description": "Name of the widget",
                                                    "example": "Basic Slider"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "createdAt": {
                            "type": "string",
                            "description": "Created date",
                            "example": "2022-03-25T03:17:44.092Z"
                        },
                        "updatedAt": {
                            "type": "string",
                            "description": "Updated date",
                            "example": "2022-06-10T07:51:12.510Z"
                        }
                    }
                },
                "StorefrontBody": {
                    "properties": {
                        "pages": {
                            "type": "array",
                            "description": "Template Pages",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "pageName": {
                                        "type": "string",
                                        "description": "Page identifier",
                                        "example": "Home"
                                    },
                                    "pageUrl": {
                                        "type": "string",
                                        "description": "Page URL",
                                        "example": "/"
                                    },
                                    "seoTitle": {
                                        "type": "string",
                                        "description": "SEO title of the page",
                                        "example": "Sample Seo Title"
                                    },
                                    "seoDescription": {
                                        "type": "string",
                                        "description": "SEO description of the page",
                                        "example": "Sample Seo Description"
                                    },
                                    "widgets": {
                                        "type": "array",
                                        "description": "Widgets in the page",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "description": "Widget Type",
                                                    "example": "basic-slider"
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "description": "Name of the widget",
                                                    "example": "Basic Slider"
                                                },
                                                "widgetData": {
                                                    "type": "array",
                                                    "description": "Widget Data",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "fields": {
                                                                "type": "array",
                                                                "description": "Field Data",
                                                                "items": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "key": {
                                                                            "type": "string",
                                                                            "description": "Field obj key",
                                                                            "example": "action"
                                                                        },
                                                                        "type": {
                                                                            "type": "string",
                                                                            "description": "Field obj type",
                                                                            "example": "productCategory"
                                                                        },
                                                                        "values": {
                                                                            "type": "object",
                                                                            "description": "Field obj values",
                                                                            "example": {
                                                                                "values": {
                                                                                    "type": "product",
                                                                                    "values": "61d572e4b119b00013a5e61e"
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "PaginatedResult": {
                    "type": "object",
                    "properties": {
                        "total": {
                            "type": "number",
                            "description": "Total number of records"
                        },
                        "page": {
                            "type": "number",
                            "description": "Page Number"
                        },
                        "perPage": {
                            "type": "number",
                            "description": "No of records per page"
                        },
                        "results": {
                            "type": "array",
                            "items": {}
                        }
                    }
                }
            }
        },
        "servers": [
            {
                "url": "https://apiservice.lightbooks-dev.io/api/v1/partner-integrations/stores",
                "description": "Development server"
            }
        ],
        "paths": {
            "/all/stores": {
                "get": {
                    "summary": "Get All Stores for a client",
                    "tags": [
                        "Store"
                    ],
                    "description": "Get All Stores for a client that were created externally via API",
                    "security": [
                        {
                            "apiKeyAuth": []
                        }
                    ],
                    "parameters": [
                        {
                            "in": "query",
                            "name": "page",
                            "schema": {
                                "type": "number",
                                "description": "Current Page"
                            }
                        },
                        {
                            "in": "query",
                            "name": "perPage",
                            "schema": {
                                "type": "integer",
                                "description": "Number of categories per page"
                            }
                        }
                    ],
                    "responses": {
                        "201": {
                            "description": "Simplified store information retrieved in a paginated format.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/PaginatedResult"
                                    }
                                }
                            }
                        },
                        "403": {
                            "description": "Invalid Api Key"
                        },
                        "422": {
                            "description": "Data error"
                        },
                        "500": {
                            "description": "Internal Server Error"
                        }
                    },
                    "x-amazon-apigateway-integration": {
                        "type": "aws_proxy",
                        "httpMethod": "GET",
                        "uri": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:128512798967:function:aasaan-api-dev-serverless/invocations",
                        "passthroughBehavior": "when_no_match",
                        "responses": {
                            "default": {
                                "statusCode": 201
                            }
                        }
                    }
                }
            },
            "/{storeId}": {
                "post": {
                    "summary": "Create a new store.",
                    "tags": [
                        "Store"
                    ],
                    "description": "Create a new Store.",
                    "parameters": [
                        {
                            "name": "storeId",
                            "in": "path",
                            "required": true,
                            "schema": {
                                "type": "string",
                                "description": "Store ID for this resource request"
                            }
                        }
                    ],
                    "requestBody": {
                        "required": true,
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "$ref": "#/components/schemas/StoreBody"
                                }
                            }
                        }
                    },
                    "responses": {
                        "201": {
                            "description": "Store created.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/Store"
                                    }
                                }
                            }
                        },
                        "403": {
                            "description": "Invalid Api Key"
                        },
                        "422": {
                            "description": "Data error"
                        },
                        "500": {
                            "description": "Internal Server Error"
                        }
                    },
                    "x-amazon-apigateway-integration": {
                        "type": "aws_proxy",
                        "httpMethod": "POST",
                        "uri": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:128512798967:function:aasaan-api-dev-serverless/invocations",
                        "passthroughBehavior": "when_no_match",
                        "responses": {
                            "default": {
                                "statusCode": 201
                            }
                        }
                    }
                },
                "patch": {
                    "summary": "Update Store information (email, address, metadata)",
                    "tags": [
                        "Store"
                    ],
                    "description": "Update Store Information",
                    "parameters": [
                        {
                            "name": "storeId",
                            "in": "path",
                            "required": true,
                            "schema": {
                                "type": "string",
                                "description": "Store ID for this resource request"
                            }
                        }
                    ],
                    "requestBody": {
                        "required": true,
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "$ref": "#/components/schemas/StoreUpdateBody"
                                }
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "Store Updated.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/Store"
                                    }
                                }
                            }
                        },
                        "403": {
                            "description": "Invalid Api Key"
                        },
                        "422": {
                            "description": "Data error"
                        },
                        "500": {
                            "description": "Internal Server Error"
                        }
                    },
                    "x-amazon-apigateway-integration": {
                        "type": "aws_proxy",
                        "httpMethod": "PATCH",
                        "uri": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:128512798967:function:aasaan-api-dev-serverless/invocations",
                        "passthroughBehavior": "when_no_match",
                        "responses": {
                            "default": {
                                "statusCode": 200
                            }
                        }
                    }
                },
                "get": {
                    "summary": "Get Store Information",
                    "tags": [
                        "Store"
                    ],
                    "description": "Get Store Information",
                    "parameters": [
                        {
                            "name": "storeId",
                            "in": "path",
                            "required": true,
                            "schema": {
                                "type": "string",
                                "description": "Store ID for this resource request"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "Store Retrieved.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/Store"
                                    }
                                }
                            }
                        },
                        "403": {
                            "description": "Invalid Api Key"
                        },
                        "422": {
                            "description": "Data error"
                        },
                        "500": {
                            "description": "Internal Server Error"
                        }
                    },
                    "x-amazon-apigateway-integration": {
                        "type": "aws_proxy",
                        "httpMethod": "GET",
                        "uri": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:128512798967:function:aasaan-api-dev-serverless/invocations",
                        "passthroughBehavior": "when_no_match",
                        "responses": {
                            "default": {
                                "statusCode": 200
                            }
                        }
                    }
                }
            },
            "/{storeId}/customdomain": {
                "post": {
                    "summary": "Create a custom domain.",
                    "tags": [
                        "Custom Domain"
                    ],
                    "description": "Create a custom domain.",
                    "parameters": [
                        {
                            "name": "storeId",
                            "in": "path",
                            "required": true,
                            "schema": {
                                "type": "string",
                                "description": "Store ID for this resource request"
                            }
                        }
                    ],
                    "requestBody": {
                        "required": true,
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "$ref": "#/components/schemas/CustomDomainBody"
                                }
                            }
                        }
                    },
                    "responses": {
                        "201": {
                            "description": "Custom domain created.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/CustomDomain"
                                    }
                                }
                            }
                        },
                        "403": {
                            "description": "Invalid Api Key"
                        },
                        "422": {
                            "description": "Data error"
                        },
                        "500": {
                            "description": "Internal Server Error"
                        }
                    },
                    "x-amazon-apigateway-integration": {
                        "type": "aws_proxy",
                        "httpMethod": "POST",
                        "uri": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:128512798967:function:aasaan-api-dev-serverless/invocations",
                        "passthroughBehavior": "when_no_match",
                        "responses": {
                            "default": {
                                "statusCode": 201
                            }
                        }
                    }
                }
            },
            "/{storeId}/categories/{id}": {
                "post": {
                    "summary": "Create a new category.",
                    "tags": [
                        "Category"
                    ],
                    "description": "Create a new category.",
                    "parameters": [
                        {
                            "name": "id",
                            "in": "path",
                            "required": true,
                            "schema": {
                                "type": "string",
                                "description": "Category Id"
                            }
                        },
                        {
                            "name": "storeId",
                            "in": "path",
                            "required": true,
                            "schema": {
                                "type": "string",
                                "description": "Store ID for this resource request"
                            }
                        }
                    ],
                    "requestBody": {
                        "required": true,
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "$ref": "#/components/schemas/CategoryBody"
                                }
                            }
                        }
                    },
                    "responses": {
                        "201": {
                            "description": "Category created.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/Category"
                                    }
                                }
                            }
                        },
                        "403": {
                            "description": "Invalid Api Key"
                        },
                        "422": {
                            "description": "Data error"
                        },
                        "500": {
                            "description": "Internal Server Error"
                        }
                    },
                    "x-amazon-apigateway-integration": {
                        "type": "aws_proxy",
                        "httpMethod": "POST",
                        "uri": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:128512798967:function:aasaan-api-dev-serverless/invocations",
                        "passthroughBehavior": "when_no_match",
                        "responses": {
                            "default": {
                                "statusCode": 201
                            }
                        }
                    }
                },
                "put": {
                    "summary": "Put a new category.",
                    "tags": [
                        "Category"
                    ],
                    "description": "Create or Update a new category.",
                    "parameters": [
                        {
                            "name": "id",
                            "in": "path",
                            "required": true,
                            "schema": {
                                "type": "string",
                                "description": "Category Id"
                            }
                        },
                        {
                            "name": "storeId",
                            "in": "path",
                            "required": true,
                            "schema": {
                                "type": "string",
                                "description": "Store ID for this resource request"
                            }
                        }
                    ],
                    "requestBody": {
                        "required": true,
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "$ref": "#/components/schemas/CategoryBody"
                                }
                            }
                        }
                    },
                    "responses": {
                        "201": {
                            "description": "Category created.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/Category"
                                    }
                                }
                            }
                        },
                        "403": {
                            "description": "Invalid Api Key"
                        },
                        "422": {
                            "description": "Data error"
                        },
                        "500": {
                            "description": "Internal Server Error"
                        }
                    },
                    "x-amazon-apigateway-integration": {
                        "type": "aws_proxy",
                        "httpMethod": "PUT",
                        "uri": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:128512798967:function:aasaan-api-dev-serverless/invocations",
                        "passthroughBehavior": "when_no_match",
                        "responses": {
                            "default": {
                                "statusCode": 201
                            }
                        }
                    }
                },
                "patch": {
                    "summary": "Update a category.",
                    "tags": [
                        "Category"
                    ],
                    "description": "Update a category.",
                    "parameters": [
                        {
                            "name": "storeId",
                            "in": "path",
                            "required": true,
                            "schema": {
                                "type": "string",
                                "description": "Store ID for this resource request"
                            }
                        },
                        {
                            "name": "id",
                            "in": "path",
                            "required": true,
                            "schema": {
                                "type": "string",
                                "description": "Category Id"
                            }
                        }
                    ],
                    "requestBody": {
                        "required": true,
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "$ref": "#/components/schemas/CategoryBody"
                                }
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "Category updated.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/Category"
                                    }
                                }
                            }
                        },
                        "403": {
                            "description": "Invalid Api Key"
                        },
                        "500": {
                            "description": "Internal Server Error"
                        }
                    },
                    "x-amazon-apigateway-integration": {
                        "type": "aws_proxy",
                        "httpMethod": "PATCH",
                        "uri": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:128512798967:function:aasaan-api-dev-serverless/invocations",
                        "passthroughBehavior": "when_no_match",
                        "responses": {
                            "default": {
                                "statusCode": 200
                            }
                        }
                    }
                },
                "get": {
                    "summary": "Get a category by Id.",
                    "tags": [
                        "Category"
                    ],
                    "description": "Returns a category.",
                    "parameters": [
                        {
                            "name": "storeId",
                            "in": "path",
                            "required": true,
                            "schema": {
                                "type": "string",
                                "description": "Store ID for this resource request"
                            }
                        },
                        {
                            "name": "id",
                            "in": "path",
                            "required": true,
                            "schema": {
                                "type": "string",
                                "description": "Category Id"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "Returns a category.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/Category"
                                    }
                                }
                            }
                        },
                        "403": {
                            "description": "Invalid Api Key."
                        },
                        "404": {
                            "description": "Category not found."
                        },
                        "500": {
                            "description": "Internal Server Error"
                        }
                    },
                    "x-amazon-apigateway-integration": {
                        "type": "aws_proxy",
                        "httpMethod": "GET",
                        "uri": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:128512798967:function:aasaan-api-dev-serverless/invocations",
                        "passthroughBehavior": "when_no_match",
                        "responses": {
                            "default": {
                                "statusCode": 200
                            }
                        }
                    }
                },
                "delete": {
                    "summary": "Delete a Category.",
                    "tags": [
                        "Category"
                    ],
                    "description": "Delete a Category.",
                    "parameters": [
                        {
                            "name": "storeId",
                            "in": "path",
                            "required": true,
                            "schema": {
                                "type": "string",
                                "description": "Store ID for this resource request"
                            }
                        },
                        {
                            "name": "id",
                            "in": "path",
                            "required": true,
                            "schema": {
                                "type": "string",
                                "description": "Category id"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "A string response noting whether the category was deleted or not.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    }
                                }
                            }
                        },
                        "403": {
                            "description": "Invalid Api Key"
                        },
                        "500": {
                            "description": "Internal Server Error"
                        }
                    },
                    "x-amazon-apigateway-integration": {
                        "type": "aws_proxy",
                        "httpMethod": "DELETE",
                        "uri": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:128512798967:function:aasaan-api-dev-serverless/invocations",
                        "passthroughBehavior": "when_no_match",
                        "responses": {
                            "default": {
                                "statusCode": 200
                            }
                        }
                    }
                }
            },
            "/{storeId}/categories/": {
                "put": {
                    "summary": "Put a multiple categories",
                    "tags": [
                        "Category"
                    ],
                    "description": "Create or Update multiple categories'",
                    "parameters": [
                        {
                            "name": "storeId",
                            "in": "path",
                            "required": true,
                            "schema": {
                                "type": "string",
                                "description": "Store ID for this resource request"
                            }
                        }
                    ],
                    "requestBody": {
                        "required": true,
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "$ref": "#/components/schemas/CategoryBodyWithId"
                                    }
                                }
                            }
                        }
                    },
                    "responses": {
                        "201": {
                            "description": "Categories created or updated in the category array, errors for those categories that couldn't be updated or created.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "object",
                                        "properties": {
                                            "categories": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "$ref": "#/components/schemas/Category"
                                                }
                                            },
                                            "errors": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string",
                                                    "example": "Category with CategoryId - category-id-1 is missing name"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "403": {
                            "description": "Invalid Api Key"
                        },
                        "422": {
                            "description": "Data error"
                        },
                        "500": {
                            "description": "Internal Server Error"
                        }
                    },
                    "x-amazon-apigateway-integration": {
                        "type": "aws_proxy",
                        "httpMethod": "PUT",
                        "uri": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:128512798967:function:aasaan-api-dev-serverless/invocations",
                        "passthroughBehavior": "when_no_match",
                        "responses": {
                            "default": {
                                "statusCode": 201
                            }
                        }
                    }
                }
            },
            "/{storeId}/categories": {
                "get": {
                    "summary": "Get all categories.",
                    "tags": [
                        "Category"
                    ],
                    "description": "Get all categories.",
                    "parameters": [
                        {
                            "name": "storeId",
                            "in": "path",
                            "required": true,
                            "schema": {
                                "type": "string",
                                "description": "Store ID for this resource request"
                            }
                        },
                        {
                            "in": "query",
                            "name": "page",
                            "schema": {
                                "type": "number",
                                "description": "Current Page"
                            }
                        },
                        {
                            "in": "query",
                            "name": "perPage",
                            "schema": {
                                "type": "integer",
                                "description": "Number of categories per page"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "A list of all categories.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/PaginatedResult"
                                    }
                                }
                            }
                        },
                        "403": {
                            "description": "Invalid Api Key."
                        },
                        "500": {
                            "description": "Internal Server Error"
                        }
                    },
                    "x-amazon-apigateway-integration": {
                        "type": "aws_proxy",
                        "httpMethod": "GET",
                        "uri": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:128512798967:function:aasaan-api-dev-serverless/invocations",
                        "passthroughBehavior": "when_no_match",
                        "responses": {
                            "default": {
                                "statusCode": 200
                            }
                        }
                    }
                }
            },
            "/{storeId}/brands/{id}": {
                "post": {
                    "summary": "Create a new brand.",
                    "tags": [
                        "Brand"
                    ],
                    "description": "Create a new brand.",
                    "parameters": [
                        {
                            "name": "id",
                            "in": "path",
                            "required": true,
                            "schema": {
                                "type": "string",
                                "description": "Brand id"
                            }
                        },
                        {
                            "name": "storeId",
                            "in": "path",
                            "required": true,
                            "schema": {
                                "type": "string",
                                "description": "Store ID for this resource request"
                            }
                        }
                    ],
                    "requestBody": {
                        "required": true,
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "$ref": "#/components/schemas/BrandBody"
                                }
                            }
                        }
                    },
                    "responses": {
                        "201": {
                            "description": "Brand created.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/Brand"
                                    }
                                }
                            }
                        },
                        "403": {
                            "description": "Invalid Api Key"
                        },
                        "422": {
                            "description": "Data error"
                        },
                        "500": {
                            "description": "Internal Server Error"
                        }
                    },
                    "x-amazon-apigateway-integration": {
                        "type": "aws_proxy",
                        "httpMethod": "POST",
                        "uri": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:128512798967:function:aasaan-api-dev-serverless/invocations",
                        "passthroughBehavior": "when_no_match",
                        "responses": {
                            "default": {
                                "statusCode": 201
                            }
                        }
                    }
                },
                "put": {
                    "summary": "Put a  brand.",
                    "tags": [
                        "Brand"
                    ],
                    "description": "Create or update a new brand",
                    "parameters": [
                        {
                            "name": "id",
                            "in": "path",
                            "required": true,
                            "schema": {
                                "type": "string",
                                "description": "Brand id"
                            }
                        },
                        {
                            "name": "storeId",
                            "in": "path",
                            "required": true,
                            "schema": {
                                "type": "string",
                                "description": "Store ID for this resource request"
                            }
                        }
                    ],
                    "requestBody": {
                        "required": true,
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "$ref": "#/components/schemas/BrandBody"
                                }
                            }
                        }
                    },
                    "responses": {
                        "201": {
                            "description": "Brand created.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/Brand"
                                    }
                                }
                            }
                        },
                        "403": {
                            "description": "Invalid Api Key"
                        },
                        "422": {
                            "description": "Data error"
                        },
                        "500": {
                            "description": "Internal Server Error"
                        }
                    },
                    "x-amazon-apigateway-integration": {
                        "type": "aws_proxy",
                        "httpMethod": "PUT",
                        "uri": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:128512798967:function:aasaan-api-dev-serverless/invocations",
                        "passthroughBehavior": "when_no_match",
                        "responses": {
                            "default": {
                                "statusCode": 201
                            }
                        }
                    }
                },
                "patch": {
                    "summary": "Update a brand.",
                    "tags": [
                        "Brand"
                    ],
                    "description": "Update a brand.",
                    "parameters": [
                        {
                            "name": "id",
                            "in": "path",
                            "required": true,
                            "schema": {
                                "type": "string",
                                "description": "Brand id"
                            }
                        },
                        {
                            "name": "storeId",
                            "in": "path",
                            "required": true,
                            "schema": {
                                "type": "string",
                                "description": "Store ID for this resource request"
                            }
                        }
                    ],
                    "requestBody": {
                        "required": true,
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "$ref": "#/components/schemas/BrandUpdateBody"
                                }
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "Brand updated.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/Brand"
                                    }
                                }
                            }
                        },
                        "403": {
                            "description": "Invalid Api Key"
                        },
                        "500": {
                            "description": "Internal Server Error"
                        }
                    },
                    "x-amazon-apigateway-integration": {
                        "type": "aws_proxy",
                        "httpMethod": "PATCH",
                        "uri": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:128512798967:function:aasaan-api-dev-serverless/invocations",
                        "passthroughBehavior": "when_no_match",
                        "responses": {
                            "default": {
                                "statusCode": 200
                            }
                        }
                    }
                },
                "delete": {
                    "summary": "Delete a brand.",
                    "tags": [
                        "Brand"
                    ],
                    "description": "Delete a brand.",
                    "parameters": [
                        {
                            "name": "storeId",
                            "in": "path",
                            "required": true,
                            "schema": {
                                "type": "string",
                                "description": "Store ID for this resource request"
                            }
                        },
                        {
                            "name": "id",
                            "in": "path",
                            "required": true,
                            "schema": {
                                "type": "string",
                                "description": "Brand id"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "Brand Delete.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    }
                                }
                            }
                        },
                        "403": {
                            "description": "Invalid Api Key"
                        },
                        "500": {
                            "description": "Internal Server Error"
                        }
                    },
                    "x-amazon-apigateway-integration": {
                        "type": "aws_proxy",
                        "httpMethod": "DELETE",
                        "uri": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:128512798967:function:aasaan-api-dev-serverless/invocations",
                        "passthroughBehavior": "when_no_match",
                        "responses": {
                            "default": {
                                "statusCode": 200
                            }
                        }
                    }
                },
                "get": {
                    "summary": "Get a brand by Id.",
                    "tags": [
                        "Brand"
                    ],
                    "description": "Returns a brand.",
                    "parameters": [
                        {
                            "name": "storeId",
                            "in": "path",
                            "required": true,
                            "schema": {
                                "type": "string",
                                "description": "Store ID for this resource request"
                            }
                        },
                        {
                            "name": "id",
                            "in": "path",
                            "required": true,
                            "schema": {
                                "type": "string",
                                "description": "Brand id"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "Returns a brand.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/Brand"
                                    }
                                }
                            }
                        },
                        "403": {
                            "description": "Invalid Api Key."
                        },
                        "404": {
                            "description": "Brand not found."
                        },
                        "500": {
                            "description": "Internal Server Error"
                        }
                    },
                    "x-amazon-apigateway-integration": {
                        "type": "aws_proxy",
                        "httpMethod": "GET",
                        "uri": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:128512798967:function:aasaan-api-dev-serverless/invocations",
                        "passthroughBehavior": "when_no_match",
                        "responses": {
                            "default": {
                                "statusCode": 200
                            }
                        }
                    }
                }
            },
            "/{storeId}/brands": {
                "put": {
                    "summary": "Put a multiple brands",
                    "tags": [
                        "Brand"
                    ],
                    "description": "Create or update multiple brand",
                    "parameters": [
                        {
                            "name": "storeId",
                            "in": "path",
                            "required": true,
                            "schema": {
                                "type": "string",
                                "description": "Store ID for this resource request"
                            }
                        }
                    ],
                    "requestBody": {
                        "required": true,
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "$ref": "#/components/schemas/BrandBodyWithId"
                                    }
                                }
                            }
                        }
                    },
                    "responses": {
                        "201": {
                            "description": "Brands created or update in an array and an array with errors for those brands which couldn't be updated.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "object",
                                        "properties": {
                                            "brands": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "$ref": "#/components/schemas/Brand"
                                                }
                                            },
                                            "errors": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string",
                                                    "example": "Brand with BrandId - brand-id-1 is missing name"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "403": {
                            "description": "Invalid Api Key"
                        },
                        "422": {
                            "description": "Data error"
                        },
                        "500": {
                            "description": "Internal Server Error"
                        }
                    },
                    "x-amazon-apigateway-integration": {
                        "type": "aws_proxy",
                        "httpMethod": "PUT",
                        "uri": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:128512798967:function:aasaan-api-dev-serverless/invocations",
                        "passthroughBehavior": "when_no_match",
                        "responses": {
                            "default": {
                                "statusCode": 201
                            }
                        }
                    }
                },
                "get": {
                    "summary": "Get all brands.",
                    "tags": [
                        "Brand"
                    ],
                    "description": "Get all brands.",
                    "parameters": [
                        {
                            "name": "storeId",
                            "in": "path",
                            "required": true,
                            "schema": {
                                "type": "string",
                                "description": "Store ID for this resource request"
                            }
                        },
                        {
                            "in": "query",
                            "name": "page",
                            "schema": {
                                "type": "number",
                                "description": "Current Page"
                            }
                        },
                        {
                            "in": "query",
                            "name": "perPage",
                            "schema": {
                                "type": "integer",
                                "description": "Number of brands per page"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "A list of all brands.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/PaginatedResult"
                                    }
                                }
                            }
                        },
                        "403": {
                            "description": "Invalid Api Key."
                        },
                        "500": {
                            "description": "Internal Server Error"
                        }
                    },
                    "x-amazon-apigateway-integration": {
                        "type": "aws_proxy",
                        "httpMethod": "GET",
                        "uri": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:128512798967:function:aasaan-api-dev-serverless/invocations",
                        "passthroughBehavior": "when_no_match",
                        "responses": {
                            "default": {
                                "statusCode": 200
                            }
                        }
                    }
                }
            },
            "/{storeId}/tags/{id}": {
                "post": {
                    "summary": "Create a new tag.",
                    "tags": [
                        "Tag"
                    ],
                    "description": "Create a new tag.",
                    "parameters": [
                        {
                            "name": "id",
                            "in": "path",
                            "required": true,
                            "schema": {
                                "type": "string",
                                "description": "Tag id"
                            }
                        },
                        {
                            "name": "storeId",
                            "in": "path",
                            "required": true,
                            "schema": {
                                "type": "string",
                                "description": "Store ID for this resource request"
                            }
                        }
                    ],
                    "requestBody": {
                        "required": true,
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "$ref": "#/components/schemas/TagBody"
                                }
                            }
                        }
                    },
                    "responses": {
                        "201": {
                            "description": "Tag created.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/Tag"
                                    }
                                }
                            }
                        },
                        "403": {
                            "description": "Invalid Api Key"
                        },
                        "422": {
                            "description": "Data error"
                        },
                        "500": {
                            "description": "Internal Server Error"
                        }
                    },
                    "x-amazon-apigateway-integration": {
                        "type": "aws_proxy",
                        "httpMethod": "POST",
                        "uri": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:128512798967:function:aasaan-api-dev-serverless/invocations",
                        "passthroughBehavior": "when_no_match",
                        "responses": {
                            "default": {
                                "statusCode": 201
                            }
                        }
                    }
                },
                "put": {
                    "summary": "Put a  tag.",
                    "tags": [
                        "Tag"
                    ],
                    "description": "Create or update a new tag",
                    "parameters": [
                        {
                            "name": "id",
                            "in": "path",
                            "required": true,
                            "schema": {
                                "type": "string",
                                "description": "Tag id"
                            }
                        },
                        {
                            "name": "storeId",
                            "in": "path",
                            "required": true,
                            "schema": {
                                "type": "string",
                                "description": "Store ID for this resource request"
                            }
                        }
                    ],
                    "requestBody": {
                        "required": true,
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "$ref": "#/components/schemas/TagBody"
                                }
                            }
                        }
                    },
                    "responses": {
                        "201": {
                            "description": "Tag created.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/Tag"
                                    }
                                }
                            }
                        },
                        "403": {
                            "description": "Invalid Api Key"
                        },
                        "422": {
                            "description": "Data error"
                        },
                        "500": {
                            "description": "Internal Server Error"
                        }
                    },
                    "x-amazon-apigateway-integration": {
                        "type": "aws_proxy",
                        "httpMethod": "PUT",
                        "uri": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:128512798967:function:aasaan-api-dev-serverless/invocations",
                        "passthroughBehavior": "when_no_match",
                        "responses": {
                            "default": {
                                "statusCode": 201
                            }
                        }
                    }
                },
                "patch": {
                    "summary": "Update a tag.",
                    "tags": [
                        "Tag"
                    ],
                    "description": "Update a tag.",
                    "parameters": [
                        {
                            "name": "id",
                            "in": "path",
                            "required": true,
                            "schema": {
                                "type": "string",
                                "description": "Tag id"
                            }
                        },
                        {
                            "name": "storeId",
                            "in": "path",
                            "required": true,
                            "schema": {
                                "type": "string",
                                "description": "Store ID for this resource request"
                            }
                        }
                    ],
                    "requestBody": {
                        "required": true,
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "$ref": "#/components/schemas/TagUpdateBody"
                                }
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "Tag updated.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/Tag"
                                    }
                                }
                            }
                        },
                        "403": {
                            "description": "Invalid Api Key"
                        },
                        "500": {
                            "description": "Internal Server Error"
                        }
                    },
                    "x-amazon-apigateway-integration": {
                        "type": "aws_proxy",
                        "httpMethod": "PATCH",
                        "uri": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:128512798967:function:aasaan-api-dev-serverless/invocations",
                        "passthroughBehavior": "when_no_match",
                        "responses": {
                            "default": {
                                "statusCode": 200
                            }
                        }
                    }
                },
                "delete": {
                    "summary": "Delete a tag.",
                    "tags": [
                        "Tag"
                    ],
                    "description": "Delete a tag.",
                    "parameters": [
                        {
                            "name": "storeId",
                            "in": "path",
                            "required": true,
                            "schema": {
                                "type": "string",
                                "description": "Store ID for this resource request"
                            }
                        },
                        {
                            "name": "id",
                            "in": "path",
                            "required": true,
                            "schema": {
                                "type": "string",
                                "description": "Tag id"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "Tag Delete."
                        },
                        "403": {
                            "description": "Invalid Api Key"
                        },
                        "500": {
                            "description": "Internal Server Error"
                        }
                    },
                    "x-amazon-apigateway-integration": {
                        "type": "aws_proxy",
                        "httpMethod": "DELETE",
                        "uri": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:128512798967:function:aasaan-api-dev-serverless/invocations",
                        "passthroughBehavior": "when_no_match",
                        "responses": {
                            "default": {
                                "statusCode": 200
                            }
                        }
                    }
                },
                "get": {
                    "summary": "Get a tag by Id.",
                    "tags": [
                        "Tag"
                    ],
                    "description": "Returns a tag.",
                    "parameters": [
                        {
                            "name": "storeId",
                            "in": "path",
                            "required": true,
                            "schema": {
                                "type": "string",
                                "description": "Store ID for this resource request"
                            }
                        },
                        {
                            "name": "id",
                            "in": "path",
                            "required": true,
                            "schema": {
                                "type": "string",
                                "description": "Tag id"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "Returns a tag.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/Tag"
                                    }
                                }
                            }
                        },
                        "403": {
                            "description": "Invalid Api Key."
                        },
                        "404": {
                            "description": "Tag not found."
                        },
                        "500": {
                            "description": "Internal Server Error"
                        }
                    },
                    "x-amazon-apigateway-integration": {
                        "type": "aws_proxy",
                        "httpMethod": "GET",
                        "uri": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:128512798967:function:aasaan-api-dev-serverless/invocations",
                        "passthroughBehavior": "when_no_match",
                        "responses": {
                            "default": {
                                "statusCode": 200
                            }
                        }
                    }
                }
            },
            "/{storeId}/tags": {
                "put": {
                    "summary": "Put a multiple tags",
                    "tags": [
                        "Tag"
                    ],
                    "description": "Create or update multiple tag",
                    "parameters": [
                        {
                            "name": "storeId",
                            "in": "path",
                            "required": true,
                            "schema": {
                                "type": "string",
                                "description": "Store ID for this resource request"
                            }
                        }
                    ],
                    "requestBody": {
                        "required": true,
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "$ref": "#/components/schemas/TagBodyWithId"
                                    }
                                }
                            }
                        }
                    },
                    "responses": {
                        "201": {
                            "description": "Tags created or update in an array and an array with errors for those tags which couldn't be updated.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "object",
                                        "properties": {
                                            "tags": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "$ref": "#/components/schemas/Tag"
                                                }
                                            },
                                            "errors": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string",
                                                    "example": "Tag with TagId - tag-id-1 is missing name"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "403": {
                            "description": "Invalid Api Key"
                        },
                        "422": {
                            "description": "Data error"
                        },
                        "500": {
                            "description": "Internal Server Error"
                        }
                    },
                    "x-amazon-apigateway-integration": {
                        "type": "aws_proxy",
                        "httpMethod": "PUT",
                        "uri": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:128512798967:function:aasaan-api-dev-serverless/invocations",
                        "passthroughBehavior": "when_no_match",
                        "responses": {
                            "default": {
                                "statusCode": 201
                            }
                        }
                    }
                },
                "get": {
                    "summary": "Get all tags.",
                    "tags": [
                        "Tag"
                    ],
                    "description": "Get all tags.",
                    "parameters": [
                        {
                            "name": "storeId",
                            "in": "path",
                            "required": true,
                            "schema": {
                                "type": "string",
                                "description": "Store ID for this resource request"
                            }
                        },
                        {
                            "in": "query",
                            "name": "page",
                            "schema": {
                                "type": "number",
                                "description": "Current Page"
                            }
                        },
                        {
                            "in": "query",
                            "name": "perPage",
                            "schema": {
                                "type": "integer",
                                "description": "Number of tags per page"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "A list of all tags.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/PaginatedResult"
                                    }
                                }
                            }
                        },
                        "403": {
                            "description": "Invalid Api Key."
                        },
                        "500": {
                            "description": "Internal Server Error"
                        }
                    },
                    "x-amazon-apigateway-integration": {
                        "type": "aws_proxy",
                        "httpMethod": "GET",
                        "uri": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:128512798967:function:aasaan-api-dev-serverless/invocations",
                        "passthroughBehavior": "when_no_match",
                        "responses": {
                            "default": {
                                "statusCode": 200
                            }
                        }
                    }
                }
            },
            "/{storeId}/product-ordering": {
                "get": {
                    "summary": "Gets the current product ordering.",
                    "tags": [
                        "Store Front"
                    ],
                    "description": "Gets the current product ordering.",
                    "parameters": [
                        {
                            "name": "storeId",
                            "in": "path",
                            "required": true,
                            "schema": {
                                "type": "string",
                                "description": "Store ID for this resource request"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "An ordered list of all products sorted by their current display ordering.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "string",
                                                    "description": "product id of the specified product",
                                                    "example": "product-id-1"
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "description": "name of the product",
                                                    "example": "sample product name goes here"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "403": {
                            "description": "Invalid Api Key."
                        },
                        "500": {
                            "description": "Internal Server Error"
                        }
                    },
                    "x-amazon-apigateway-integration": {
                        "type": "aws_proxy",
                        "httpMethod": "GET",
                        "uri": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:128512798967:function:aasaan-api-dev-serverless/invocations",
                        "passthroughBehavior": "when_no_match",
                        "responses": {
                            "default": {
                                "statusCode": 200
                            }
                        }
                    }
                },
                "post": {
                    "summary": "Updates the product ordering within a category",
                    "tags": [
                        "Store Front"
                    ],
                    "description": "Updates the product ordering within a category",
                    "parameters": [
                        {
                            "name": "storeId",
                            "in": "path",
                            "required": true,
                            "schema": {
                                "type": "string",
                                "description": "Store ID for this resource request"
                            }
                        }
                    ],
                    "requestBody": {
                        "required": true,
                        "description": "an order list of products in a way it needs to be sorted/displayed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "string",
                                                "description": "product id of the specified product",
                                                "example": "product-id-1"
                                            },
                                            "name": {
                                                "type": "string",
                                                "description": "name of the product",
                                                "example": "sample product name goes here"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "A list of all products.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "string",
                                                    "description": "product id of the specified product",
                                                    "example": "product-id-1"
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "description": "name of the product",
                                                    "example": "sample product name goes here"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "403": {
                            "description": "Invalid Api Key."
                        },
                        "500": {
                            "description": "Internal Server Error"
                        }
                    },
                    "x-amazon-apigateway-integration": {
                        "type": "aws_proxy",
                        "httpMethod": "POST",
                        "uri": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:128512798967:function:aasaan-api-dev-serverless/invocations",
                        "passthroughBehavior": "when_no_match",
                        "responses": {
                            "default": {
                                "statusCode": 200
                            }
                        }
                    }
                }
            },
            "/{storeId}/products/{productId}": {
                "post": {
                    "summary": "Create a new product.",
                    "tags": [
                        "Product"
                    ],
                    "description": "Create a new product.",
                    "parameters": [
                        {
                            "name": "storeId",
                            "in": "path",
                            "required": true,
                            "schema": {
                                "type": "string",
                                "description": "Store ID for this resource request"
                            }
                        },
                        {
                            "name": "productId",
                            "in": "path",
                            "required": true,
                            "schema": {
                                "type": "string",
                                "description": "Product Id"
                            }
                        }
                    ],
                    "requestBody": {
                        "required": true,
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "$ref": "#/components/schemas/ProductBody"
                                }
                            }
                        }
                    },
                    "responses": {
                        "201": {
                            "description": "Product created.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/Product"
                                    }
                                }
                            }
                        },
                        "403": {
                            "description": "Invalid Api Key"
                        },
                        "422": {
                            "description": "Data error"
                        },
                        "500": {
                            "description": "Internal Server Error"
                        }
                    },
                    "x-amazon-apigateway-integration": {
                        "type": "aws_proxy",
                        "httpMethod": "POST",
                        "uri": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:128512798967:function:aasaan-api-dev-serverless/invocations",
                        "passthroughBehavior": "when_no_match",
                        "responses": {
                            "default": {
                                "statusCode": 201
                            }
                        }
                    }
                },
                "put": {
                    "summary": "Create or update a  product.",
                    "tags": [
                        "Product"
                    ],
                    "description": "Create a new product or update existing product with this PUT operation.",
                    "parameters": [
                        {
                            "name": "storeId",
                            "in": "path",
                            "required": true,
                            "schema": {
                                "type": "string",
                                "description": "Store ID for this resource request"
                            }
                        },
                        {
                            "name": "productId",
                            "in": "path",
                            "required": true,
                            "schema": {
                                "type": "string",
                                "description": "Product Id"
                            }
                        }
                    ],
                    "requestBody": {
                        "required": true,
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "$ref": "#/components/schemas/ProductBody"
                                }
                            }
                        }
                    },
                    "responses": {
                        "201": {
                            "description": "Product created.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/Product"
                                    }
                                }
                            }
                        },
                        "403": {
                            "description": "Invalid Api Key"
                        },
                        "422": {
                            "description": "Data error"
                        },
                        "500": {
                            "description": "Internal Server Error"
                        }
                    },
                    "x-amazon-apigateway-integration": {
                        "type": "aws_proxy",
                        "httpMethod": "PUT",
                        "uri": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:128512798967:function:aasaan-api-dev-serverless/invocations",
                        "passthroughBehavior": "when_no_match",
                        "responses": {
                            "default": {
                                "statusCode": 201
                            }
                        }
                    }
                },
                "patch": {
                    "summary": "Update a product.",
                    "tags": [
                        "Product"
                    ],
                    "description": "Update a product.",
                    "parameters": [
                        {
                            "name": "storeId",
                            "in": "path",
                            "required": true,
                            "schema": {
                                "type": "string",
                                "description": "Store ID for this resource request"
                            }
                        },
                        {
                            "name": "productId",
                            "in": "path",
                            "required": true,
                            "schema": {
                                "type": "string",
                                "description": "Product Id"
                            }
                        }
                    ],
                    "requestBody": {
                        "required": true,
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "$ref": "#/components/schemas/ProductUpdateBody"
                                }
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "Product updated.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/Product"
                                    }
                                }
                            }
                        },
                        "403": {
                            "description": "Invalid Api Key"
                        },
                        "500": {
                            "description": "Internal Server Error"
                        }
                    },
                    "x-amazon-apigateway-integration": {
                        "type": "aws_proxy",
                        "httpMethod": "PATCH",
                        "uri": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:128512798967:function:aasaan-api-dev-serverless/invocations",
                        "passthroughBehavior": "when_no_match",
                        "responses": {
                            "default": {
                                "statusCode": 200
                            }
                        }
                    }
                },
                "get": {
                    "summary": "Get a product by id.",
                    "tags": [
                        "Product"
                    ],
                    "description": "Returns a product.",
                    "parameters": [
                        {
                            "name": "storeId",
                            "in": "path",
                            "required": true,
                            "schema": {
                                "type": "string",
                                "description": "Store ID for this resource request"
                            }
                        },
                        {
                            "name": "productId",
                            "in": "path",
                            "required": true,
                            "schema": {
                                "type": "string",
                                "description": "Product Id"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "Returns a product.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/Product"
                                    }
                                }
                            }
                        },
                        "403": {
                            "description": "Invalid Api Key."
                        },
                        "404": {
                            "description": "Product not found."
                        },
                        "500": {
                            "description": "Internal Server Error"
                        }
                    },
                    "x-amazon-apigateway-integration": {
                        "type": "aws_proxy",
                        "httpMethod": "DELETE",
                        "uri": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:128512798967:function:aasaan-api-dev-serverless/invocations",
                        "passthroughBehavior": "when_no_match",
                        "responses": {
                            "default": {
                                "statusCode": 200
                            }
                        }
                    }
                },
                "delete": {
                    "summary": "Delete a Product.",
                    "tags": [
                        "Product"
                    ],
                    "description": "Delete a Product.",
                    "parameters": [
                        {
                            "name": "storeId",
                            "in": "path",
                            "required": true,
                            "schema": {
                                "type": "string",
                                "description": "Store ID for this resource request"
                            }
                        },
                        {
                            "name": "productId",
                            "in": "path",
                            "required": true,
                            "schema": {
                                "type": "string",
                                "description": "Product id"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "Product Delete.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    }
                                }
                            }
                        },
                        "403": {
                            "description": "Invalid Api Key"
                        },
                        "500": {
                            "description": "Internal Server Error"
                        }
                    },
                    "x-amazon-apigateway-integration": {
                        "type": "aws_proxy",
                        "httpMethod": "DELETE",
                        "uri": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:128512798967:function:aasaan-api-dev-serverless/invocations",
                        "passthroughBehavior": "when_no_match",
                        "responses": {
                            "default": {
                                "statusCode": 200
                            }
                        }
                    }
                }
            },
            "/{storeId}/products": {
                "put": {
                    "summary": "Create or update multiple products.",
                    "tags": [
                        "Product"
                    ],
                    "description": "Create a new product or update existing product with this PUT operation.",
                    "parameters": [
                        {
                            "name": "storeId",
                            "in": "path",
                            "required": true,
                            "schema": {
                                "type": "string",
                                "description": "Store ID for this resource request"
                            }
                        }
                    ],
                    "requestBody": {
                        "required": true,
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "$ref": "#/components/schemas/ProductBodyWithId"
                                    }
                                }
                            }
                        }
                    },
                    "responses": {
                        "201": {
                            "description": "Product created.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "object",
                                        "properties": {
                                            "products": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "$ref": "#/components/schemas/Product"
                                                }
                                            },
                                            "errors": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string",
                                                    "example": "Product with ProductId - product-id-1 is missing categories"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "403": {
                            "description": "Invalid Api Key"
                        },
                        "422": {
                            "description": "Data error"
                        },
                        "500": {
                            "description": "Internal Server Error"
                        }
                    },
                    "x-amazon-apigateway-integration": {
                        "type": "aws_proxy",
                        "httpMethod": "PUT",
                        "uri": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:128512798967:function:aasaan-api-dev-serverless/invocations",
                        "passthroughBehavior": "when_no_match",
                        "responses": {
                            "default": {
                                "statusCode": 201
                            }
                        }
                    }
                },
                "get": {
                    "summary": "Get all products.",
                    "tags": [
                        "Product"
                    ],
                    "description": "Get all products.",
                    "parameters": [
                        {
                            "name": "storeId",
                            "in": "path",
                            "required": true,
                            "schema": {
                                "type": "string",
                                "description": "Store ID for this resource request"
                            }
                        },
                        {
                            "in": "query",
                            "name": "page",
                            "schema": {
                                "type": "number",
                                "description": "Current Page"
                            }
                        },
                        {
                            "in": "query",
                            "name": "perPage",
                            "schema": {
                                "type": "integer",
                                "description": "Number of products per page"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "A list of all products.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/PaginatedResult"
                                    }
                                }
                            }
                        },
                        "403": {
                            "description": "Invalid Api Key."
                        },
                        "500": {
                            "description": "Internal Server Error"
                        }
                    },
                    "x-amazon-apigateway-integration": {
                        "type": "aws_proxy",
                        "httpMethod": "GET",
                        "uri": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:128512798967:function:aasaan-api-dev-serverless/invocations",
                        "passthroughBehavior": "when_no_match",
                        "responses": {
                            "default": {
                                "statusCode": 200
                            }
                        }
                    }
                }
            },
            "/{storeId}/products/{productId}/variants/{variantId}": {
                "post": {
                    "summary": "Create a new Variant of the specified base product.",
                    "tags": [
                        "Product"
                    ],
                    "description": "Create a new Variant of the specified base product.",
                    "parameters": [
                        {
                            "name": "storeId",
                            "in": "path",
                            "required": true,
                            "schema": {
                                "type": "string",
                                "description": "Store ID for this resource request"
                            }
                        },
                        {
                            "name": "productId",
                            "in": "path",
                            "required": true,
                            "schema": {
                                "type": "string",
                                "description": "Product Id"
                            }
                        },
                        {
                            "name": "variantId",
                            "in": "path",
                            "required": true,
                            "schema": {
                                "type": "string",
                                "description": "Variant Id"
                            }
                        }
                    ],
                    "requestBody": {
                        "required": true,
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "$ref": "#/components/schemas/VariantBody"
                                }
                            }
                        }
                    },
                    "responses": {
                        "201": {
                            "description": "Variant created.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/Variant"
                                    }
                                }
                            }
                        },
                        "403": {
                            "description": "Invalid Api Key"
                        },
                        "422": {
                            "description": "Data error"
                        },
                        "500": {
                            "description": "Internal Server Error"
                        }
                    },
                    "x-amazon-apigateway-integration": {
                        "type": "aws_proxy",
                        "httpMethod": "POST",
                        "uri": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:128512798967:function:aasaan-api-dev-serverless/invocations",
                        "passthroughBehavior": "when_no_match",
                        "responses": {
                            "default": {
                                "statusCode": 200
                            }
                        }
                    }
                },
                "patch": {
                    "summary": "Update a variant.",
                    "tags": [
                        "Product"
                    ],
                    "description": "Update a variant.",
                    "parameters": [
                        {
                            "name": "storeId",
                            "in": "path",
                            "required": true,
                            "schema": {
                                "type": "string",
                                "description": "Store ID for this resource request"
                            }
                        },
                        {
                            "name": "productId",
                            "in": "path",
                            "required": true,
                            "schema": {
                                "type": "string",
                                "description": "Product Id"
                            }
                        },
                        {
                            "name": "variantId",
                            "in": "path",
                            "required": true,
                            "schema": {
                                "type": "string",
                                "description": "Variant Id"
                            }
                        }
                    ],
                    "requestBody": {
                        "required": true,
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "$ref": "#/components/schemas/VariantBody"
                                }
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "Variant updated.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/Variant"
                                    }
                                }
                            }
                        },
                        "403": {
                            "description": "Invalid Api Key"
                        },
                        "500": {
                            "description": "Internal Server Error"
                        }
                    },
                    "x-amazon-apigateway-integration": {
                        "type": "aws_proxy",
                        "httpMethod": "PATCH",
                        "uri": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:128512798967:function:aasaan-api-dev-serverless/invocations",
                        "passthroughBehavior": "when_no_match",
                        "responses": {
                            "default": {
                                "statusCode": 200
                            }
                        }
                    }
                }
            },
            "/{storeId}/storefront": {
                "get": {
                    "summary": "Get the template attributes.",
                    "tags": [
                        "Store Front"
                    ],
                    "description": "Get the attributes that can be updated in the published templates.",
                    "parameters": [
                        {
                            "name": "storeId",
                            "in": "path",
                            "required": true,
                            "schema": {
                                "type": "string",
                                "description": "Store ID for this resource request"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "Attributes that can be updated in the published template.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/StorefrontBody"
                                    }
                                }
                            }
                        },
                        "403": {
                            "description": "Invalid Api Key."
                        },
                        "500": {
                            "description": "Internal Server Error"
                        }
                    },
                    "x-amazon-apigateway-integration": {
                        "type": "aws_proxy",
                        "httpMethod": "GET",
                        "uri": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:128512798967:function:aasaan-api-dev-serverless/invocations",
                        "passthroughBehavior": "when_no_match",
                        "responses": {
                            "default": {
                                "statusCode": 200
                            }
                        }
                    }
                },
                "patch": {
                    "summary": "Update a template.",
                    "tags": [
                        "Store Front"
                    ],
                    "description": "Update a template.",
                    "parameters": [
                        {
                            "name": "storeId",
                            "in": "path",
                            "required": true,
                            "schema": {
                                "type": "string",
                                "description": "Store ID for this resource request"
                            }
                        }
                    ],
                    "requestBody": {
                        "required": true,
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "$ref": "#/components/schemas/StorefrontBody"
                                }
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "Product updated.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/Storefront"
                                    }
                                }
                            }
                        },
                        "403": {
                            "description": "Invalid Api Key"
                        },
                        "500": {
                            "description": "Internal Server Error"
                        }
                    },
                    "x-amazon-apigateway-integration": {
                        "type": "aws_proxy",
                        "httpMethod": "PATCH",
                        "uri": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:128512798967:function:aasaan-api-dev-serverless/invocations",
                        "passthroughBehavior": "when_no_match",
                        "responses": {
                            "default": {
                                "statusCode": 200
                            }
                        }
                    }
                }
            }
        }
}